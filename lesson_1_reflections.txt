Q1: How did viewing a diff between two versions of a file help you see the bug that was introduced?
A1: By comparing the two files using diff, lines containing different text are given and shown
Q2: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A2: seeing the buildup gives you more insight in how the program came to life, new bugs in new versions can be found by comparing with older version
Q3: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
A3: you're not aware of the changes related to the commits after automatic saves. Being in control of saves gives you the opportunity to add comments and only save logical changes
Q4: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A4: connected files in writing code
Q5: How can you use the commands git log and git diff to view the history of files?
A5: git log is used to see all the recent commits with comment and id, git diff compares 2 id's to see changes between these two versions
Q6: How might using version control make you more confident to make changes that could break something?
A6: by knowing you can just easily check back, you won't risk not knowing where you introduced the bug
Q7: Now that you have your workspace set up, what do you want to try using Git for?
A7: android projects version control